<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="org.edmond.jimi.company.dao.EmployeeDao">
	<insert id="insert" parameterType="Employee" useGeneratedKeys="true"
		keyProperty="id">
		insert into jimi_employee
		(companyId,name,phone,phoneIMEI,status,latitude,longitude,createDate,loginCount,updateDate,city)
		values(#{companyId},#{name},#{phone},#{phoneIMEI},#{status},#{latitude},#{longitude},#{createDate},#{loginCount},#{updateDate},#{city})
	</insert>
	<!-- 获取用户 -->
	<select id="get" parameterType="int" resultType="Employee">
		select id,
		companyId,name,phone,phoneIMEI,status,latitude,longitude,loginCount,createDate,updateDate,city
		from jimi_employee
		where id=#{id}
	</select>

	<!-- 查询用户,演示: 1.输入用map传入多个参数 2.<where>语句, 智能添加where和and关键字 3.输出直接映射对象 -->
	<select id="search" parameterType="map" resultType="Employee">
		select
		id,companyId,name,phone,phoneIMEI,status,latitude,longitude,loginCount,createDate,updateDate,city
		from jimi_employee
		<where>
			<if test="companyId != null">
				and companyId=#{companyId}
			</if>
			<if test="name != null">
				and name=#{name}
			</if>
			<if test="phone != null">
				and phone=#{phone}
			</if>
			<if test="phoneIMEI != null">
				and phoneIMEI=#{phoneIMEI}
			</if>
			<if test="status != null">
				and status=#{status}
			</if>
			<if test="latitude != null">
				and latitude=#{latitude}
			</if>
			<if test="longitude != null">
				and longitude=#{longitude}
			</if>
			<if test="city!=null">
				and city=#{city}
			</if>
		</where>
	</select>

	<!-- 删除 -->
	<delete id="delete" parameterType="int">
		delete from jimi_employee
		where id=#{id};
	</delete>

	<update id="update" parameterType="Employee">
		update jimi_employee set
		name=#{name},
		phone=#{phone},
		phoneIMEI=#{phoneIMEI},
		status=#{status},
		latitude=#{latitude},
		longitude=#{longitude},
		loginCount=#{loginCount},
		updateDate=#{updateDate},
		city=#{city}
		where id=#{id}
	</update>

	<select id="getAll" resultType="Employee">
		select
		id,companyId,name,phone,phoneIMEI,status,latitude,longitude,loginCount,createDate,updateDate,city
		from jimi_employee
	</select>


</mapper> 
